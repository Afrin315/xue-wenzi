{"version":3,"sources":["components/SortMenu.js","components/WordType.js","components/SpeakButton.js","components/WordListItem.js","components/WordList.js","models/Database.js","models/ChineseWord.js","components/WordTypeSelect.js","components/WordForm.js","components/WordTypeFilter.js","components/ExportButton.js","components/ImportButton.js","App.js","serviceWorker.js","index.js"],"names":["SortMenu","onChange","event","sort","target","value","_this","props","this","react_default","a","createElement","htmlFor","className","id","Component","WordType","_this$props","type","trim","length","chooseVoice","_callee2","language","voiceIndex","allVoices","voices","regenerator_default","wrap","_context2","prev","next","Promise","resolve","speechSynthesis","getVoices","onvoiceschanged","sent","filter","voice","lang","abrupt","stop","SpeakButton","speak","_callee","message","_context","SpeechSynthesisUtterance","onClick","index_es","icon","WordListItem","translation","pinyin","editWord","deleteWord","components_SpeakButton","components_WordType","WordList","words","onSortChange","wordTypeFilter","totalWords","midIndex","Math","ceil","leftWords","slice","rightWords","units","count","concat","displayType","getUnitsFor","components_SortMenu","map","word","src_components_WordListItem","Object","assign","key","Database","window","localStorage","console","error","appData","getItem","JSON","parse","get","getJSON","setItem","stringify","defaultWordMap","你好","ChineseWord","args","classCallCheck","wordMap","values","data","reverse","b","aValue","bValue","set","WordTypeSelect","label","WordForm","possibleConstructorReturn","getPrototypeOf","call","onValueChange","setState","prevState","onPinyinChange","onTranslationChange","onTypeChange","save","preventDefault","state","onSave","prevProps","_this2","showValueField","_this$state","onSubmit","required","placeholder","class","components_WordTypeSelect","WordTypeFilter","changeFilter","filterWordsByType","wordTypesAndCounts","activeFilter","wordTypes","keys","reduce","total","num","title","wordType","isActive","ExportButton","export","blob","Blob","url","URL","createObjectURL","link","document","dateStr","date","year","getFullYear","month","getMonth","day","getDate","getDateString","Date","createEvent","setAttribute","initMouseEvent","dispatchEvent","ImportButton","onFileLoaded","knownWordValues","onImportComplete","text","srcElement","result","wordList","newWords","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","wordData","indexOf","push","err","return","onFileSelected","file","files","reader","FileReader","addEventListener","readAsText","import","fileInput","click","library","add","faPen","faPlayCircle","faTrash","App","refreshWords","filterWords","typeFilter","findAll","visibleWords","editingPinyin","editingTranslation","editingValue","editingType","confirm","delete","onWordSave","changeWordTypeFilter","flashNotice","notice","setTimeout","importedWords","wordValues","join","typesAndCounts","getWordTypesAndCounts","components_ExportButton","components_ImportButton","src_components_WordTypeFilter","components_WordList","components_WordForm","rel","href","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88b693af.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SortMenu extends Component {\n  onChange = event => {\n    const sort = event.target.value;\n    this.props.onChange(sort);\n  }\n\n  render() {\n    const { sort } = this.props\n\n    return (\n      <div>\n        <label\n          htmlFor=\"sort-menu\"\n          className=\"mr-1 f6\"\n        >Sort:</label>\n        <select\n          id=\"sort-menu\"\n          className=\"form-select input-sm\"\n          value={sort}\n          onChange={this.onChange}\n        >\n          <option value=\"date\">Date</option>\n          <option value=\"pinyin\">Pinyin</option>\n          <option value=\"translation\">Translation</option>\n          <option value=\"type\">Type</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default SortMenu;\n","import React, { Component } from 'react';\n\nclass WordType extends Component {\n  render() {\n    const { type, className } = this.props;\n\n    if (typeof type !== 'string' || type.trim().length < 1) {\n      return null;\n    }\n\n    return (\n      <span className={className}>\n        {type === 'noun' ? (\n           <span>n.</span>\n         ) :\n         type === 'verb' ? (\n           <span>v.</span>\n         ) :\n         type === 'adjective' ? (\n           <span>adj.</span>\n         ) :\n         type === 'adverb' ? (\n           <span>adv.</span>\n         ) :\n         type === 'pronoun' ? (\n           <span>pro.</span>\n         ) : (\n           <span>{type}</span>\n         )}\n      </span>\n    );\n  }\n}\n\nexport default WordType;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction getVoices() {\n  return new Promise(resolve => {\n    let voices = speechSynthesis.getVoices();\n    if (voices.length > 0) {\n      resolve(voices);\n      return;\n    }\n\n    speechSynthesis.onvoiceschanged = () => {\n      voices = speechSynthesis.getVoices();\n      resolve(voices);\n    };\n  });\n}\n\nasync function chooseVoice(language, voiceIndex) {\n  const allVoices = await getVoices();\n  const voices = allVoices.filter(voice => voice.lang === language);\n  return new Promise(resolve => {\n    resolve(voices[voiceIndex]);\n  });\n}\n\nclass SpeakButton extends Component {\n  speak = async () => {\n    const { value } = this.props;\n    const message = new SpeechSynthesisUtterance(value);\n    const language = 'zh-CN';\n    message.voice = await chooseVoice(language, 0);\n    speechSynthesis.speak(message);\n  };\n\n  render() {\n    if (!speechSynthesis) {\n      return null;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        className={this.props.className}\n        onClick={this.speak}\n      ><FontAwesomeIcon icon=\"play-circle\" /></button>\n    );\n  }\n}\n\nexport default SpeakButton;\n","import React, { Component } from 'react';\nimport WordType from './WordType';\nimport SpeakButton from './SpeakButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './WordListItem.css';\n\nclass WordListItem extends Component {\n  render() {\n    const { value, translation, type, pinyin, editWord,\n            deleteWord } = this.props;\n\n    return (\n      <li className=\"word-list-item mb-3 d-flex f3 flex-items-start\">\n        <div>\n          <div className=\"d-flex flex-items-center lh-condensed\">\n            {value}\n            <SpeakButton\n              value={value}\n              className=\"btn-link mx-1 f6 v-align-middle\"\n            />\n            {translation ? (\n              <span\n                className=\"d-inline-block ml-2\"\n              >{translation}</span>\n            ) : null}\n            <WordType\n              type={type}\n              className=\"ml-2 text-gray f5\"\n            />\n          </div>\n          <div>\n            <span className=\"Label f5 Label--gray\">{pinyin}</span>\n            <div className=\"f6 show-on-hover ml-3\">\n              <button\n                type=\"button\"\n                onClick={editWord}\n                className=\"btn-link link-gray\"\n              ><FontAwesomeIcon icon=\"pen\" /></button>\n              <button\n                type=\"button\"\n                onClick={deleteWord}\n                className=\"btn-link link-gray ml-3\"\n              ><FontAwesomeIcon icon=\"trash\" /></button>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default WordListItem;\n","import React, { Component } from 'react';\nimport SortMenu from './SortMenu';\nimport WordListItem from './WordListItem';\n\nfunction getUnitsFor(count, type) {\n  if (type === 'all') {\n    if (count === 1) {\n      return 'word or phrase';\n    }\n    const conjunction = count < 1 ? 'or' : 'and';\n    return `words ${conjunction} phrases`;\n  }\n\n  let displayType = type;\n  if (type === 'measure') {\n    displayType = 'measure word';\n  }\n\n  return `${displayType}${count === 1 ? '' : 's'}`;\n}\n\nclass WordList extends Component {\n  render() {\n    const { words, onSortChange, sort, wordTypeFilter } = this.props\n    const totalWords = words.length;\n    const midIndex = Math.ceil(totalWords / 2);\n    const leftWords = words.slice(0, midIndex);\n    const rightWords = words.slice(midIndex, totalWords);\n    const units = getUnitsFor(totalWords, wordTypeFilter);\n\n    return (\n      <div>\n        <div className=\"border-bottom pb-2 d-flex flex-items-center flex-justify-between mb-2\">\n          <h2\n            className=\"text-normal f3\"\n          >{totalWords} {units}</h2>\n          {totalWords > 0 ? (\n            <SortMenu\n              sort={sort}\n              onChange={onSortChange}\n            />\n          ) : null}\n        </div>\n        {words.length > 0 ? (\n          <div className=\"clearfix\">\n            <div className=\"col-6 float-left\">\n              <ul>\n                {leftWords.map(word => (\n                  <WordListItem\n                    {...word}\n                    key={word.value}\n                    editWord={() => this.props.editWord(word)}\n                    deleteWord={() => this.props.deleteWord(word)}\n                  />\n                ))}\n              </ul>\n            </div>\n            {rightWords.length > 0 ? (\n              <div className=\"col-6 float-left\">\n                <ul>\n                  {rightWords.map(word => (\n                    <WordListItem\n                      {...word}\n                      key={word.value}\n                      editWord={() => this.props.editWord(word)}\n                      deleteWord={() => this.props.deleteWord(word)}\n                    />\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        ) : (\n          <p>You haven't added any learned words or phrases yet.</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default WordList;\n","const localStorageKey = 'xue-wenzi';\n\nexport default class Database {\n  static getJSON() {\n    if (!window.localStorage) {\n      console.error('browser does not support local storage');\n      return {};\n    }\n\n    const appData = window.localStorage.getItem(localStorageKey) || '{}';\n    return JSON.parse(appData);\n  }\n\n  static has(key) {\n    const value = this.get(key);\n    return typeof value !== 'undefined';\n  }\n\n  static get(key) {\n    const appData = this.getJSON();\n    return appData[key];\n  }\n\n  static set(key, value) {\n    const appData = this.getJSON();\n    appData[key] = value;\n    window.localStorage.setItem(localStorageKey, JSON.stringify(appData));\n  }\n\n  static delete(key) {\n    const appData = this.getJSON();\n    delete appData[key];\n    window.localStorage.setItem(localStorageKey, JSON.stringify(appData));\n  }\n}\n","import Database from './Database';\n\nconst wordsKey = 'words';\nconst defaultWordMap = {\n  '你好': {\n    value: '你好',\n    pinyin: 'nǐ hǎo',\n    translation: 'hello',\n    type: 'greeting'\n  }\n};\n\nclass ChineseWord {\n  static findAll(sort) {\n    const wordMap = Database.get(wordsKey) || defaultWordMap;\n    const wordData = Object.values(wordMap);\n\n    const words = wordData.map(data => new ChineseWord(data));\n    if (sort === 'date') {\n      return words.reverse();\n    }\n\n    return words.sort((a, b) => {\n      const aValue = a[sort];\n      const bValue = b[sort];\n\n      if (aValue < bValue) {\n        return -1\n      }\n\n      return aValue > bValue ? 1 : 0;\n    });\n  }\n\n  constructor(args) {\n    this.value = args.value;\n    this.translation = args.translation;\n    this.pinyin = args.pinyin;\n    this.type = args.type;\n  }\n\n  delete() {\n    const wordMap = Database.get(wordsKey) || {};\n    delete wordMap[this.value];\n    Database.set(wordsKey, wordMap);\n  }\n\n  save() {\n    const wordMap = Database.get(wordsKey) || {};\n    wordMap[this.value] = {\n      value: this.value,\n      translation: this.translation,\n      pinyin: this.pinyin,\n      type: this.type\n    };\n    Database.set(wordsKey, wordMap);\n  }\n}\n\nexport default ChineseWord;\n","import React, { Component } from 'react';\n\nclass WordTypeSelect extends Component {\n  onChange = event => {\n    const type = event.target.value;\n    this.props.onChange(type);\n  }\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <label\n          htmlFor=\"type-field\"\n          className=\"mb-1 d-block no-wrap\"\n        >Word or phrase type:</label>\n        <select\n          id=\"type-field\"\n          onChange={this.onChange}\n          value={this.props.type}\n          className=\"form-select\"\n        >\n          <option>Choose a type</option>\n          <optgroup label=\"Words\">\n            <option value=\"noun\">noun</option>\n            <option value=\"verb\">verb</option>\n            <option value=\"adjective\">adjective</option>\n            <option value=\"adverb\">adverb</option>\n            <option value=\"pronoun\">pronoun</option>\n            <option value=\"measure\">measure</option>\n          </optgroup>\n          <optgroup label=\"Phrases\">\n            <option value=\"greeting\">greeting</option>\n            <option value=\"idiom\">idiom</option>\n            <option value=\"phrase\">phrase</option>\n          </optgroup>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default WordTypeSelect;\n","import React, { Component } from 'react';\nimport ChineseWord from '../models/ChineseWord';\nimport WordTypeSelect from './WordTypeSelect';\nimport SpeakButton from './SpeakButton';\n\nclass WordForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value || '',\n      translation: props.translation || '',\n      pinyin: props.pinyin || '',\n      type: props.type || ''\n    };\n  }\n\n  onValueChange = event => {\n    const value = event.target.value\n    this.setState(prevState => ({ value }))\n  }\n\n  onPinyinChange = event => {\n    const pinyin = event.target.value\n    this.setState(prevState => ({ pinyin }))\n  }\n\n  onTranslationChange = event => {\n    const translation = event.target.value;\n    this.setState(prevState => ({ translation }));\n  }\n\n  onTypeChange = type => {\n    this.setState(prevState => ({ type }));\n  }\n\n  save = event => {\n    event.preventDefault();\n\n    const value = this.state.value.trim();\n    const pinyin = this.state.pinyin.trim();\n    const type = this.state.type;\n    const translation = this.state.translation.trim();\n\n    const word = new ChineseWord({\n      value, pinyin, type, translation\n    });\n    word.save();\n\n    this.props.onSave();\n    this.setState(prevState => ({\n      value: '',\n      pinyin: '',\n      type: '',\n      translation: ''\n    }))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.setState(prevState => ({ value: this.props.value }))\n    }\n    if (prevProps.type !== this.props.type) {\n      this.setState(prevState => ({ type: this.props.type }))\n    }\n    if (prevProps.translation !== this.props.translation) {\n      this.setState(prevState => ({ translation: this.props.translation }))\n    }\n    if (prevProps.pinyin !== this.props.pinyin) {\n      this.setState(prevState => ({ pinyin: this.props.pinyin }))\n    }\n  }\n\n  render() {\n    const existingValue = this.props.value;\n    const showValueField = existingValue.length < 1;\n    const { value, type, pinyin, translation } = this.state;\n\n    return (\n      <form\n        onSubmit={this.save}\n        className=\"ml-6\"\n      >\n        <h2\n          className=\"text-gray f6 mb-2\"\n        >Add a word or phrase</h2>\n        <div className=\"form-group mt-0\">\n          <label\n            htmlFor=\"word-field\"\n            className=\"mb-1 d-block no-wrap\"\n          >Chinese word or phrase:</label>\n          {showValueField ? (\n            <div className={value.length > 0 ? 'input-group' : ''}>\n              <input\n                type=\"text\"\n                required\n                id=\"word-field\"\n                className=\"form-control\"\n                onChange={this.onValueChange}\n                value={value}\n                placeholder=\"e.g., 书\"\n              />\n              {value.length > 0 ? (\n                <span class=\"input-group-button\">\n                  <SpeakButton\n                    value={value}\n                    className=\"btn\"\n                  />\n                </span>\n              ) : null}\n            </div>\n          ) : (\n            <div>\n              <span>{value}</span>\n              <SpeakButton\n                value={value}\n                className=\"btn-link ml-2\"\n              />\n            </div>\n          )}\n        </div>\n        <WordTypeSelect\n          type={type}\n          onChange={this.onTypeChange}\n        />\n        <div className=\"form-group\">\n          <label\n            htmlFor=\"pinyin-field\"\n            className=\"mb-1 d-block no-wrap\"\n          >Pinyin:</label>\n          <input\n            type=\"text\"\n            required\n            id=\"pinyin-field\"\n            placeholder=\"e.g., shū\"\n            className=\"form-control\"\n            onChange={this.onPinyinChange}\n            value={pinyin}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label\n            htmlFor=\"translation-field\"\n            className=\"mb-1 d-block no-wrap\"\n          >English translation:</label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g., book\"\n            id=\"translation-field\"\n            className=\"form-control\"\n            onChange={this.onTranslationChange}\n            value={translation}\n          />\n        </div>\n        <button className=\"btn\" type=\"submit\">\n          Save\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default WordForm;\n","import React, { Component } from 'react';\nimport './WordTypeFilter.css';\n\nclass WordTypeFilter extends Component {\n  changeFilter = event => {\n    this.props.filterWordsByType(event.target.value);\n  };\n\n  render() {\n    const { wordTypesAndCounts, activeFilter } = this.props;\n    const wordTypes = Object.keys(wordTypesAndCounts).sort();\n    const totalWords = Object.values(wordTypesAndCounts)\n                             .reduce((total, num) => total + num);\n\n    return (\n      <div>\n        <h3\n          className=\"f6 text-gray mb-2\"\n        >Filter words</h3>\n        <ul className=\"filter-list\">\n          <li>\n            <button\n              value=\"all\"\n              type=\"button\"\n              className={`btn-link width-full text-left filter-item${activeFilter === 'all' ? ' selected' : ''}`}\n              onClick={this.changeFilter}\n            >\n              <span className=\"count\" title=\"words\">{totalWords}</span>\n              All\n            </button>\n          </li>\n          {wordTypes.map(wordType => {\n            const isActive = activeFilter === wordType;\n\n            return (\n              <li key={wordType}>\n                <button\n                  value={wordType}\n                  type=\"button\"\n                  className={`btn-link width-full text-left filter-item${isActive ? ' selected' : ''}`}\n                  onClick={this.changeFilter}\n                >\n                  <span className=\"count\" title=\"words\">{wordTypesAndCounts[wordType]}</span>\n                  {wordType}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default WordTypeFilter;\n","import React, { Component } from 'react';\n\nfunction getDateString(date) {\n  const year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = `0${month}`;\n  }\n  let day = date.getDate();\n  if (day < 10) {\n    day = `0${day}`;\n  }\n  return `${year}-${month}-${day}`;\n}\n\nclass ExportButton extends Component {\n  export = () => {\n    const { words } = this.props;\n    const data = JSON.stringify(words);\n    const blob = new Blob([data], { type: 'application/octet-stream' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    const dateStr = getDateString(new Date());\n    const event = document.createEvent('MouseEvents');\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', `chinese-vocabulary-${dateStr}.json`);\n    event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n    link.dispatchEvent(event);\n  };\n\n  render() {\n    return (\n      <button\n        type=\"button\"\n        onClick={this.export}\n        className=\"btn-link header-link\"\n      >Export</button>\n    );\n  }\n}\n\nexport default ExportButton;\n","import React, { Component } from 'react';\nimport ChineseWord from '../models/ChineseWord';\n\nclass ImportButton extends Component {\n  onFileLoaded = event => {\n    const { knownWordValues, onImportComplete } = this.props;\n    const text = event.srcElement.result;\n    const wordList = JSON.parse(text);\n    const newWords = [];\n\n    for (const wordData of wordList) {\n      const word = new ChineseWord(wordData);\n      if (knownWordValues.length < 1 || knownWordValues.indexOf(word.value) < 0) {\n        newWords.push(word);\n      }\n      word.save();\n    }\n\n    onImportComplete(newWords);\n  };\n\n  onFileSelected = event => {\n    const fileInput = event.target;\n    const file = fileInput.files[0];\n    if (!file) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.addEventListener('loadend', this.onFileLoaded);\n    reader.readAsText(file);\n  };\n\n  import = () => {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.addEventListener('change', this.onFileSelected, false);\n    fileInput.click();\n  };\n\n  render() {\n    return (\n      <button\n        type=\"button\"\n        onClick={this.import}\n        className=\"btn-link ml-3 header-link\"\n      >Import</button>\n    );\n  }\n}\n\nexport default ImportButton;\n","import React, { Component } from 'react';\nimport './App.css';\nimport WordList from './components/WordList';\nimport ChineseWord from './models/ChineseWord';\nimport WordForm from './components/WordForm';\nimport WordTypeFilter from './components/WordTypeFilter';\nimport ExportButton from './components/ExportButton';\nimport ImportButton from './components/ImportButton';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPen, faPlayCircle, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faPen);\nlibrary.add(faPlayCircle);\nlibrary.add(faTrash);\n\nfunction getWordTypesAndCounts(words) {\n  const typesAndCounts = {};\n\n  for (const word of words) {\n    if (!(word.type in typesAndCounts)) {\n      typesAndCounts[word.type] = 0;\n    }\n    typesAndCounts[word.type]++;\n  }\n\n  return typesAndCounts;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: [],\n      visibleWords: [],\n      sort: 'date',\n      editingValue: '',\n      editingTranslation: '',\n      editingType: '',\n      editingPinyin: '',\n      wordTypeFilter: 'all',\n      notice: ''\n    };\n  }\n\n  componentDidMount() {\n    this.refreshWords();\n  }\n\n  onSortChange = sort => {\n    this.setState(prevState => ({ sort }), () => this.refreshWords());\n  };\n\n  filterWords = (words, typeFilter) => {\n    if (typeFilter === 'all') {\n      return words;\n    }\n\n    return words.filter(word => word.type === typeFilter);\n  };\n\n  refreshWords = () => {\n    const words = ChineseWord.findAll(this.state.sort);\n    this.setState(prevState => ({\n      words,\n      visibleWords: this.filterWords(words, this.state.wordTypeFilter)\n    }));\n  };\n\n  editWord = word => {\n    this.setState(prevState => ({\n      editingPinyin: word.pinyin,\n      editingTranslation: word.translation,\n      editingValue: word.value,\n      editingType: word.type\n    }));\n  };\n\n  deleteWord = word => {\n    if (window.confirm(`Are you sure you want to delete ${word.value} (${word.translation})?`)) {\n      word.delete();\n      this.refreshWords();\n    }\n  };\n\n  onWordSave = () => {\n    this.refreshWords();\n    this.setState(prevState => ({\n      editingPinyin: '',\n      editingTranslation: '',\n      editingValue: '',\n      editingType: ''\n    }));\n  };\n\n  changeWordTypeFilter = type => {\n    this.setState(prevState => ({\n      wordTypeFilter: type,\n      visibleWords: this.filterWords(this.state.words, type)\n    }));\n  };\n\n  flashNotice = notice => {\n    this.setState(prevState => ({ notice }), () => {\n      window.setTimeout(() => {\n        this.setState(prevState => ({ notice: '' }));\n      }, 3000);\n    });\n  };\n\n  importedWords = newWords => {\n    if (newWords.length < 1) {\n      return;\n    }\n    this.refreshWords();\n    const wordValues = newWords.map(word => word.value).join(', ');\n    this.flashNotice(`Imported: ${wordValues}`);\n  };\n\n  render() {\n    const { words, sort, editingPinyin, editingType, visibleWords,\n            editingTranslation, editingValue, wordTypeFilter,\n            notice } = this.state;\n    const wordTypesAndCounts = getWordTypesAndCounts(words);\n\n    return (\n      <div className=\"app-wrapper\">\n        <header className=\"app-header mb-3\">\n          <div className=\"container-lg pb-2 d-flex flex-items-end flex-justify-between\">\n            <h1\n              className=\"pt-4 app-title\"\n            >学文字</h1>\n            {notice.length > 0 ? (\n              <h2>{notice}</h2>\n            ) : null}\n            <div>\n              {words.length > 0 ? (\n                <ExportButton words={words} />\n              ) : null}\n              <ImportButton\n                knownWordValues={words.map(word => word.value)}\n                onImportComplete={this.importedWords}\n              />\n            </div>\n          </div>\n        </header>\n        <main className=\"container-lg width-full clearfix\">\n          <div className=\"col-2 pr-6 float-left\">\n            {words.length > 0 ? (\n              <WordTypeFilter\n                activeFilter={wordTypeFilter}\n                wordTypesAndCounts={wordTypesAndCounts}\n                filterWordsByType={this.changeWordTypeFilter}\n              />\n            ) : null}\n          </div>\n          <div className=\"col-7 float-left\">\n            <WordList\n              wordTypeFilter={wordTypeFilter}\n              words={visibleWords}\n              sort={sort}\n              onSortChange={this.onSortChange}\n              editWord={this.editWord}\n              deleteWord={this.deleteWord}\n            />\n          </div>\n          <div className=\"col-3 float-left\">\n            <WordForm\n              onSave={this.onWordSave}\n              pinyin={editingPinyin}\n              translation={editingTranslation}\n              value={editingValue}\n              type={editingType}\n            />\n          </div>\n        </main>\n        <footer className=\"app-footer mt-4\">\n          <div className=\"container py-4 f6\">\n            <a\n              className=\"link-gray\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/cheshire137/xue-wenzi\"\n            >View source</a>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}